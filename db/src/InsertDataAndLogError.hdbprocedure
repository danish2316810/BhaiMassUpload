PROCEDURE "INSERTDATAANDLOGERROR" (
    IN datatoinsert TABLE (StudentId NVARCHAR(5000), FIRSTNAME NVARCHAR(5000) , LASTNAME NVARCHAR(5000) , DOB NVARCHAR(5000) , ADDRESS NVARCHAR(5000)),
    OUT errorlog TABLE ( ERROR_CODE NVARCHAR(5000), ERROR_MSG NVARCHAR(5000))
  )
  LANGUAGE SQLSCRIPT
  SQL SECURITY INVOKER
  AS
  BEGIN
    DECLARE errorCount INTEGER = 0;
    
    DECLARE CURSOR c_data for select * from :datatoinsert;
  
    DECLARE ID_ROW INTEGER;
    DECLARE N_STOP INTEGER ;
    DECLARE ID VARCHAR(36);
    DECLARE STD_ID VARCHAR(40);
    DECLARE FIRSTNAME VARCHAR(40);
    DECLARE LASTNAME VARCHAR(40);
    DECLARE DOB VARCHAR(40);
    DECLARE ADDRESS VARCHAR(40);
    DECLARE EX_MESSAGE VARCHAR(1000);
  
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
  
      EX_MESSAGE := 'SQL Exception occured. Error Code is: ' || ::SQL_ERROR_CODE || ' Error message is: ' || ::SQL_ERROR_MESSAGE;
  
  
      INSERT INTO APP_INTERACTIONS_ERROR_LOG (ERROR_CODE, ERROR_MSG ) VALUES (STD_ID,EX_MESSAGE);
  
  
    
    END;
  
  
  
  
  
    CREATE LOCAL TEMPORARY TABLE #ltt_ErrorLogTable ( ErrorDescription NVARCHAR(5000), FailedDataRow NVARCHAR(5000));
    
  
    
  
    FOR c_data_row AS c_data DO
  
     
      STD_ID = :c_data_row.STUDENTID;
      FIRSTNAME = :c_data_row.FIRSTNAME;   
      LASTNAME =  :c_data_row.LASTNAME; 
      DOB =  :c_data_row.DOB;
      ADDRESS =  :c_data_row.ADDRESS;
      
  
      
      INSERT INTO APP_INTERACTIONS_STUDENTS (StudentId, FIRSTNAME, LASTNAME , DOB ,ADDRESS)
            VALUES (STD_ID, FIRSTNAME, LASTNAME , DOB , ADDRESS);
    
  
  
    END FOR;
  
  
   
    
    
  
    
  
    errorlog = SELECT ERROR_CODE,ERROR_MSG FROM APP_INTERACTIONS_ERROR_LOG;
  
     
  
  END;
  